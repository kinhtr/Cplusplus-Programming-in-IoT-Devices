//definition of class Point
class Point {
public:
    //constructor
    Point(double xcoord = 0.0, double ycoord = 0.0) : x(xcoord), y(ycoord) {}
    // destructor
    virtual ~Point() = default;
    virtual void input(const char* prompt);
    virtual void output() const;
    virtual double area() const;
    void move(double deltax, double deltay);
private:
    double x;
    double y;
};

// Point class implementation
#include <iostream>
#include "Point.h"


void Point::input(const char* prompt) {
    std::cout << prompt << std::endl;
    std::cout << "Enter x:";
    std::cin >> x;
    std::cout << "Enter y:";
    std::cin >> y;
}

void Point::output() const {
    std::cout << "Coordinates: (" << x << "," << y << ")" << std::endl;
}
 
double Point::area() const {
    return 0.0;
}


//definition of class Circle
#include "Point.h"
class Circle : public Point {
public:
    //constructor
    Circle(double xcoord = 0.0, double ycoord = 0.0, double radius0 = 0.0);
    // destructor
    virtual ~Circle() = default;
    void input(const char* prompt) override;
    void output() const override;
    double area() const override;
private:
    double radius;
};

//Implementation of class Circle
#include <iostream>
#include "Circle.h"

Circle::Circle(double xcoord, double ycoord, double radius0) : Point(xcoord, ycoord) {
	radius = radius0;
}

void Circle::input(const char* prompt) {
	Point::input(prompt);
	std::cout << "Enter radius:";
	std::cin >> radius;
}
void Circle::output() const {
	std::cout << "Circle's area: " << area() << " ";
	Point::output();
}
double Circle::area() const {
	const float pi = 3.14159f;
	return pi * radius * radius;
}


//definition of class Circle
#include "Point.h"
class Square : public Point {
public:
    //constructor
    Square(double xcoord = 0.0, double ycoord = 0.0, double height = 0.0, double width = 0.0);
    // destructor
    virtual ~Square() = default;
    void input(const char* prompt) override;
    void output() const override;
    double area() const override;
private:
    double height;
    double width;
};

//Implementation of class Square
#include <iostream>
#include "Square.h"

Square::Square(double xcoord, double ycoord, double h, double w) : Point(xcoord, ycoord) {
	height = h;
	width = w;
}

void Square::input(const char* prompt) {
	Point::input(prompt);
	std::cout << "Enter height: ";
	std::cin >> height;
	std::cout << "Enter width: ";
	std::cin >> width;
}

void Square::output() const {
	std::cout << "Square's area: " << area() << " ";
	Point::output();
}

double Square::area() const {
	return height * width;
}
